import os
from getpass import getpass

# Dicion√°rio para armazenar usu√°rios em mem√≥ria
usuario = {}

# ---------------------- Leitura do arquivo de usu√°rios ----------------------
try:
    with open('usuarios.txt', 'r') as arquivo:
        linhas = arquivo.readlines()
        for linha in linhas:
            linha = linha.strip()
            if ':' in linha:
                nome, senha = linha.split(':')
                usuario[nome] = senha

except FileNotFoundError:
    with open('usuarios.txt', 'w') as arquivos:
        pass  # Cria o arquivo se n√£o existir

# ---------------------- Valida√ß√£o de senha forte ----------------------
def validar_senha(senha):
    if len(senha) < 6:
        print('A senha deve ter no m√≠nimo 6 caracteres.')
        return False
    elif not any(c.isdigit() for c in senha):
        print('A senha deve conter pelo menos um n√∫mero.')
        return False
    elif not any(c.isalpha() for c in senha):
        print('A senha deve conter pelo menos uma letra.')
        return False
    return True

# ---------------------- Salvamento de novo usu√°rio ----------------------
def salvar_usuario(nome, senha):
    usuario[nome] = senha
    with open('usuarios.txt', 'a') as arquivo:
        arquivo.write(f'{nome}:{senha}\n')
    print('\n‚úÖ Usu√°rio criado com sucesso!')

# ---------------------- Cadastro de novos usu√°rios ----------------------
def cadastro():
    newCadastro = 's'
    while newCadastro == 's':
        print('--- Cadastro de Usu√°rio ---')
        userName = input('Crie um nome de usu√°rio: ')

        if userName in usuario:
            print('\n‚ùå Esse nome j√° est√° cadastrado.')
        else:
            while True:
                userPass = getpass('Crie sua senha (m√≠nimo 6 caracteres, letras e n√∫meros): ')
                if validar_senha(userPass):
                    salvar_usuario(userName, userPass)
                    break

        newCadastro = input('\nDeseja fazer um novo cadastro? (s/n): ').lower()
        while newCadastro not in ['s', 'n']:
            newCadastro = input('Op√ß√£o inv√°lida. Digite apenas S ou N: ').lower()

# ---------------------- Autentica√ß√£o de login ----------------------
def autenticar_usuario(nome, senha):
    return nome in usuario and senha == usuario[nome]

# ---------------------- Login de usu√°rio ----------------------
def login():
    tentativas = 0
    while tentativas < 3:
        print('\n--- Login ---')
        nome = input('Usu√°rio: ')
        senha = getpass('Senha: ')

        if autenticar_usuario(nome, senha):
            print(f'\n‚úÖ Login bem-sucedido! Bem-vindo(a), {nome}.')
            menu_lista_de_tarefas(nome)
            return nome
        else:
            tentativas += 1
            print(f'‚ùå Usu√°rio ou senha incorretos. Tentativa {tentativas}/3')

    print('\nüö´ Conta bloqueada.')
    return None

# ---------------------- Menu de tarefas ----------------------
def menu_lista_de_tarefas(nome):
    while True:
        print(f'\nüìã Lista de tarefas de {nome}')
        print('1 - Ver tarefas')
        print('2 - Adicionar tarefa')
        print('3 - Remover tarefa')
        print('4 - Sair')

        op = input('Escolha uma op√ß√£o: ').lower()

        if op == '1':
            listar_tarefas(nome)
        elif op == '2':
            adicionar_tarefa(nome)
        elif op == '3':
            remover_tarefa(nome)
        elif op == '4':
            break
        else:
            print('Op√ß√£o inv√°lida!')

# ---------------------- Ver tarefas ----------------------
def listar_tarefas(nome):
    try:
        with open(f'{nome}_tarefas.txt', 'r') as arquivo:
            tarefas = arquivo.readlines()
            if not tarefas:
                print('üì≠ Nenhuma tarefa encontrada.')
            else:
                for i, tarefa in enumerate(tarefas, start=1):
                    print(f'{i}. {tarefa.strip()}')
    except FileNotFoundError:
        print('üì≠ Nenhuma tarefa ainda.')

# ---------------------- Adicionar tarefa ----------------------
def adicionar_tarefa(nome):
    tarefa = input('Digite a nova tarefa: ')
    with open(f'{nome}_tarefas.txt', 'a') as arquivo:
        arquivo.write(tarefa + '\n')
    print('‚úÖ Tarefa adicionada!')

# ---------------------- Remover tarefa ----------------------
def remover_tarefa(nome):
    try:
        with open(f'{nome}_tarefas.txt', 'r') as arquivo:
            tarefas = arquivo.readlines()

        listar_tarefas(nome)
        escolha = int(input('Digite o n√∫mero da tarefa que deseja remover: ')) - 1

        if 0 <= escolha < len(tarefas):
            removida = tarefas.pop(escolha)
            with open(f'{nome}_tarefas.txt', 'w') as arquivo:
                arquivo.writelines(tarefas)
            print(f'üóëÔ∏è Tarefa "{removida.strip()}" removida com sucesso.')
        else:
            print('N√∫mero inv√°lido.')

    except FileNotFoundError:
        print('N√£o h√° tarefas para remover.')

# ---------------------- Menu principal ----------------------
while True:
    print('\n===== MENU PRINCIPAL =====')
    print('1 - Cadastro')
    print('2 - Login')
    print('3 - Sair')

    escolha = input('Escolha uma op√ß√£o: ').lower()

    if escolha == '1' or escolha == 'cadastro':
        cadastro()
    elif escolha == '2' or escolha == 'login':
        login()
    elif escolha == '3' or escolha == 'sair':
        print('üëã At√© a pr√≥xima!')
        break
    else:
        print('‚ùå Op√ß√£o inv√°lida.')
